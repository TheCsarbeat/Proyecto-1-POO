/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import control.MapsControl;
import java.awt.Color;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import modelo.Sismo;
import control.Utilities;
import java.awt.BorderLayout;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.table.TableModel;

/**
 *
 * @author erksm
 */
public class PanelSismos extends javax.swing.JPanel {

    /**
     * Creates new form panelSismos
     */

    //Varaibles declaration
    private Calendar fechaSismo = null;
    private Calendar hora = Calendar.getInstance();
    private double profundidad = 0, latitud = 0, longitud = 0, magnitud = 0;
    private boolean terrestre = false;
    private int provincia = 0, origenFalla;
    private String localizacion;

    //Falgs for validations
    private boolean flagMagnitud = true, flagLongitud = true, flagLatitud = true,
            flagProfundidad = true, flagRadioSelect = false;

    //To open map
    private JFrame frame = new JFrame();

    public PanelSismos() {
        initComponents();
        cargarTabla();
        //VentanaPrincipal.controlador.enviar();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        radioZonaSismo = new javax.swing.ButtonGroup();
        dateFechaSismo = new com.toedter.calendar.JDateChooser();
        lbFechaSismo = new javax.swing.JLabel();
        lbHoraSismo = new javax.swing.JLabel();
        timeHoraSismo = new javax.swing.JSpinner();
        lbSismos11 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtLocalizacion = new javax.swing.JTextArea();
        lbSismos5 = new javax.swing.JLabel();
        panelRadioZonaSismo = new javax.swing.JPanel();
        rbTerrestre = new javax.swing.JRadioButton();
        rbMaritimo = new javax.swing.JRadioButton();
        lbSismos1 = new javax.swing.JLabel();
        lbSismos2 = new javax.swing.JLabel();
        txtLatitud = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        txtLongitud = new javax.swing.JTextField();
        lbSismos9 = new javax.swing.JLabel();
        lbSismos4 = new javax.swing.JLabel();
        cboProvincias = new javax.swing.JComboBox<>();
        cbFallas = new javax.swing.JComboBox<>();
        lbSismos6 = new javax.swing.JLabel();
        lbSignoMagnitud = new javax.swing.JLabel();
        txtMagnitud = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableSismos = new javax.swing.JTable();
        btnAgregarPanel = new javax.swing.JPanel();
        btnAgregar = new javax.swing.JLabel();
        lbSismos12 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        txtProfundidad = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        btnLimpiarPanel = new javax.swing.JPanel();
        btnLimpiar = new javax.swing.JLabel();
        lbID = new javax.swing.JLabel();
        btnModificarPanel = new javax.swing.JPanel();
        btnModificar = new javax.swing.JLabel();
        btnEliminarPanel = new javax.swing.JPanel();
        btnEliminar = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(1280, 560));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        dateFechaSismo.setBackground(new java.awt.Color(255, 255, 255));
        dateFechaSismo.setName("dateChooserFechaSismo"); // NOI18N
        dateFechaSismo.setNextFocusableComponent(timeHoraSismo);
        add(dateFechaSismo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 190, -1));

        lbFechaSismo.setBackground(new java.awt.Color(0, 0, 0));
        lbFechaSismo.setFont(new java.awt.Font("Roboto Slab Light", 1, 14)); // NOI18N
        lbFechaSismo.setForeground(new java.awt.Color(0, 0, 0));
        lbFechaSismo.setText("Fecha del Sismo");
        lbFechaSismo.setToolTipText("");
        add(lbFechaSismo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 130, 50));

        lbHoraSismo.setBackground(new java.awt.Color(0, 0, 0));
        lbHoraSismo.setFont(new java.awt.Font("Roboto Slab Light", 1, 14)); // NOI18N
        lbHoraSismo.setForeground(new java.awt.Color(0, 0, 0));
        lbHoraSismo.setText("Hora exacta");
        lbHoraSismo.setToolTipText("");
        add(lbHoraSismo, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 20, 170, 50));

        timeHoraSismo.setModel(new javax.swing.SpinnerDateModel());
        timeHoraSismo.setDoubleBuffered(true);
        timeHoraSismo.setEditor(new javax.swing.JSpinner.DateEditor(timeHoraSismo, "HH:mm:ss"));
        timeHoraSismo.setNextFocusableComponent(txtLocalizacion);
        add(timeHoraSismo, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 70, 180, 30));

        lbSismos11.setBackground(new java.awt.Color(0, 0, 0));
        lbSismos11.setFont(new java.awt.Font("Roboto Slab Light", 1, 14)); // NOI18N
        lbSismos11.setForeground(new java.awt.Color(0, 0, 0));
        lbSismos11.setText("Lozalización");
        lbSismos11.setToolTipText("");
        add(lbSismos11, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 40, 130, 30));

        txtLocalizacion.setBackground(new java.awt.Color(255, 255, 255));
        txtLocalizacion.setColumns(20);
        txtLocalizacion.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        txtLocalizacion.setRows(5);
        txtLocalizacion.setBorder(null);
        txtLocalizacion.setNextFocusableComponent(rbTerrestre);
        jScrollPane2.setViewportView(txtLocalizacion);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 70, 260, 100));

        lbSismos5.setBackground(new java.awt.Color(0, 0, 0));
        lbSismos5.setFont(new java.awt.Font("Roboto Slab Light", 1, 14)); // NOI18N
        lbSismos5.setForeground(new java.awt.Color(0, 0, 0));
        lbSismos5.setText("Zona del Sismo");
        lbSismos5.setToolTipText("");
        add(lbSismos5, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 20, 130, 50));

        panelRadioZonaSismo.setBackground(new java.awt.Color(255, 255, 255));
        panelRadioZonaSismo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        radioZonaSismo.add(rbTerrestre);
        rbTerrestre.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        rbTerrestre.setText("Terrestre");

        radioZonaSismo.add(rbMaritimo);
        rbMaritimo.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        rbMaritimo.setText("Marítima");
        rbMaritimo.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rbMaritimoStateChanged(evt);
            }
        });

        javax.swing.GroupLayout panelRadioZonaSismoLayout = new javax.swing.GroupLayout(panelRadioZonaSismo);
        panelRadioZonaSismo.setLayout(panelRadioZonaSismoLayout);
        panelRadioZonaSismoLayout.setHorizontalGroup(
            panelRadioZonaSismoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRadioZonaSismoLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(panelRadioZonaSismoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbMaritimo, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                    .addComponent(rbTerrestre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelRadioZonaSismoLayout.setVerticalGroup(
            panelRadioZonaSismoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRadioZonaSismoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbMaritimo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbTerrestre)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(panelRadioZonaSismo, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 70, 160, 60));

        lbSismos1.setBackground(new java.awt.Color(0, 0, 0));
        lbSismos1.setFont(new java.awt.Font("Roboto Slab Light", 1, 14)); // NOI18N
        lbSismos1.setForeground(new java.awt.Color(0, 0, 0));
        lbSismos1.setText("Provincia");
        lbSismos1.setToolTipText("");
        add(lbSismos1, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 20, 130, 50));

        lbSismos2.setBackground(new java.awt.Color(0, 0, 0));
        lbSismos2.setFont(new java.awt.Font("Roboto Slab Light", 1, 14)); // NOI18N
        lbSismos2.setForeground(new java.awt.Color(0, 0, 0));
        lbSismos2.setText("Latitud");
        lbSismos2.setToolTipText("");
        add(lbSismos2, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 170, 130, 30));

        txtLatitud.setBackground(new java.awt.Color(255, 255, 255));
        txtLatitud.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        txtLatitud.setForeground(new java.awt.Color(204, 204, 204));
        txtLatitud.setText("Ingrese la latitud");
        txtLatitud.setBorder(null);
        txtLatitud.setNextFocusableComponent(txtLongitud);
        txtLatitud.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtLatitudFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtLatitudFocusLost(evt);
            }
        });
        txtLatitud.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtLatitudMousePressed(evt);
            }
        });
        add(txtLatitud, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 200, 200, 30));
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 230, 200, 20));
        add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 230, 190, 20));

        txtLongitud.setBackground(new java.awt.Color(255, 255, 255));
        txtLongitud.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        txtLongitud.setForeground(new java.awt.Color(204, 204, 204));
        txtLongitud.setText("Ingrese la longitud");
        txtLongitud.setBorder(null);
        txtLongitud.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtLongitudFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtLongitudFocusLost(evt);
            }
        });
        txtLongitud.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtLongitudMousePressed(evt);
            }
        });
        add(txtLongitud, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 200, 180, 30));

        lbSismos9.setBackground(new java.awt.Color(0, 0, 0));
        lbSismos9.setFont(new java.awt.Font("Roboto Slab Light", 1, 14)); // NOI18N
        lbSismos9.setForeground(new java.awt.Color(0, 0, 0));
        lbSismos9.setText("Longitud");
        lbSismos9.setToolTipText("");
        add(lbSismos9, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 170, 130, 30));

        lbSismos4.setBackground(new java.awt.Color(0, 0, 0));
        lbSismos4.setFont(new java.awt.Font("Roboto Slab Light", 1, 14)); // NOI18N
        lbSismos4.setForeground(new java.awt.Color(0, 0, 0));
        lbSismos4.setText("Profundidad KM");
        lbSismos4.setToolTipText("");
        add(lbSismos4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 130, 50));

        cboProvincias.setBackground(new java.awt.Color(255, 255, 255));
        cboProvincias.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        cboProvincias.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "San José", "Alajuela", "Cartago", "Heredia", "Guanacaste", "Puntarenas", "Limón" }));
        add(cboProvincias, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 70, 170, -1));

        cbFallas.setBackground(new java.awt.Color(255, 255, 255));
        cbFallas.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        cbFallas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Subducción ", "Choque de placas ", "Tectónico por falla local ", "Intra placa ", "Deformación Interna" }));
        add(cbFallas, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 70, 210, -1));

        lbSismos6.setBackground(new java.awt.Color(0, 0, 0));
        lbSismos6.setFont(new java.awt.Font("Roboto Slab Light", 1, 14)); // NOI18N
        lbSismos6.setForeground(new java.awt.Color(0, 0, 0));
        lbSismos6.setText("Falla");
        lbSismos6.setToolTipText("");
        add(lbSismos6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 20, 130, 50));

        lbSignoMagnitud.setBackground(new java.awt.Color(0, 0, 0));
        lbSignoMagnitud.setFont(new java.awt.Font("Roboto Slab Light", 1, 14)); // NOI18N
        lbSignoMagnitud.setForeground(new java.awt.Color(0, 0, 0));
        lbSignoMagnitud.setText("M");
        lbSignoMagnitud.setToolTipText("");
        add(lbSignoMagnitud, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 200, 70, 30));

        txtMagnitud.setBackground(new java.awt.Color(255, 255, 255));
        txtMagnitud.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        txtMagnitud.setForeground(new java.awt.Color(204, 204, 204));
        txtMagnitud.setText("Ingrese la magnitud");
        txtMagnitud.setBorder(null);
        txtMagnitud.setNextFocusableComponent(txtLatitud);
        txtMagnitud.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMagnitudFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMagnitudFocusLost(evt);
            }
        });
        txtMagnitud.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtMagnitudMousePressed(evt);
            }
        });
        txtMagnitud.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMagnitudKeyReleased(evt);
            }
        });
        add(txtMagnitud, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 200, 160, 30));

        tableSismos.setBackground(new java.awt.Color(255, 255, 255));
        tableSismos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8", "Title 9", "Title 10"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableSismos.setOpaque(false);
        tableSismos.setSelectionBackground(new java.awt.Color(50, 200, 186));
        tableSismos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tableSismos.setShowHorizontalLines(true);
        tableSismos.setShowVerticalLines(true);
        tableSismos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tableSismosMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tableSismos);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 1270, 520));

        btnAgregarPanel.setBackground(new java.awt.Color(0, 150, 136));
        btnAgregarPanel.setPreferredSize(new java.awt.Dimension(250, 50));

        btnAgregar.setFont(new java.awt.Font("Roboto Condensed", 0, 18)); // NOI18N
        btnAgregar.setForeground(new java.awt.Color(255, 255, 255));
        btnAgregar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/plus.png"))); // NOI18N
        btnAgregar.setText("Agregar");
        btnAgregar.setIconTextGap(20);
        btnAgregar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAgregarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAgregarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAgregarMouseExited(evt);
            }
        });

        javax.swing.GroupLayout btnAgregarPanelLayout = new javax.swing.GroupLayout(btnAgregarPanel);
        btnAgregarPanel.setLayout(btnAgregarPanelLayout);
        btnAgregarPanelLayout.setHorizontalGroup(
            btnAgregarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnAgregar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
        );
        btnAgregarPanelLayout.setVerticalGroup(
            btnAgregarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnAgregarPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        add(btnAgregarPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 110, 230, -1));

        lbSismos12.setBackground(new java.awt.Color(0, 0, 0));
        lbSismos12.setFont(new java.awt.Font("Roboto Slab Light", 1, 14)); // NOI18N
        lbSismos12.setForeground(new java.awt.Color(0, 0, 0));
        lbSismos12.setText("Magnitud");
        lbSismos12.setToolTipText("");
        add(lbSismos12, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 170, 130, 30));
        add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 230, 160, 20));

        txtProfundidad.setBackground(new java.awt.Color(255, 255, 255));
        txtProfundidad.setFont(new java.awt.Font("Roboto Light", 1, 14)); // NOI18N
        txtProfundidad.setForeground(new java.awt.Color(204, 204, 204));
        txtProfundidad.setText("Ingrese la profundidad");
        txtProfundidad.setBorder(null);
        txtProfundidad.setNextFocusableComponent(txtMagnitud);
        txtProfundidad.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtProfundidadFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtProfundidadFocusLost(evt);
            }
        });
        add(txtProfundidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, 170, 30));
        add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, 170, 20));

        btnLimpiarPanel.setBackground(new java.awt.Color(0, 150, 136));
        btnLimpiarPanel.setPreferredSize(new java.awt.Dimension(250, 50));

        btnLimpiar.setFont(new java.awt.Font("Roboto Condensed", 0, 18)); // NOI18N
        btnLimpiar.setForeground(new java.awt.Color(255, 255, 255));
        btnLimpiar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/limpiar.png"))); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.setIconTextGap(20);
        btnLimpiar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLimpiarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnLimpiarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnLimpiarMouseExited(evt);
            }
        });

        javax.swing.GroupLayout btnLimpiarPanelLayout = new javax.swing.GroupLayout(btnLimpiarPanel);
        btnLimpiarPanel.setLayout(btnLimpiarPanelLayout);
        btnLimpiarPanelLayout.setHorizontalGroup(
            btnLimpiarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnLimpiar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
        );
        btnLimpiarPanelLayout.setVerticalGroup(
            btnLimpiarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnLimpiarPanelLayout.createSequentialGroup()
                .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        add(btnLimpiarPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 170, 230, -1));

        lbID.setBackground(new java.awt.Color(0, 0, 0));
        lbID.setFont(new java.awt.Font("Roboto Slab Light", 1, 14)); // NOI18N
        lbID.setForeground(new java.awt.Color(0, 0, 0));
        lbID.setToolTipText("");
        add(lbID, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, 70, 30));

        btnModificarPanel.setBackground(new java.awt.Color(0, 150, 136));
        btnModificarPanel.setPreferredSize(new java.awt.Dimension(250, 50));

        btnModificar.setFont(new java.awt.Font("Roboto Condensed", 0, 18)); // NOI18N
        btnModificar.setForeground(new java.awt.Color(255, 255, 255));
        btnModificar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/editar-texto.png"))); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.setIconTextGap(20);
        btnModificar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnModificarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnModificarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnModificarMouseExited(evt);
            }
        });

        javax.swing.GroupLayout btnModificarPanelLayout = new javax.swing.GroupLayout(btnModificarPanel);
        btnModificarPanel.setLayout(btnModificarPanelLayout);
        btnModificarPanelLayout.setHorizontalGroup(
            btnModificarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnModificar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
        );
        btnModificarPanelLayout.setVerticalGroup(
            btnModificarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnModificarPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        add(btnModificarPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 230, 230, -1));

        btnEliminarPanel.setBackground(new java.awt.Color(0, 150, 136));
        btnEliminarPanel.setPreferredSize(new java.awt.Dimension(250, 50));

        btnEliminar.setBackground(new java.awt.Color(0, 150, 136));
        btnEliminar.setFont(new java.awt.Font("Roboto Condensed", 0, 18)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/trash.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.setIconTextGap(20);
        btnEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEliminarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnEliminarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnEliminarMouseExited(evt);
            }
        });

        javax.swing.GroupLayout btnEliminarPanelLayout = new javax.swing.GroupLayout(btnEliminarPanel);
        btnEliminarPanel.setLayout(btnEliminarPanelLayout);
        btnEliminarPanelLayout.setHorizontalGroup(
            btnEliminarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnEliminar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
        );
        btnEliminarPanelLayout.setVerticalGroup(
            btnEliminarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnEliminarPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        add(btnEliminarPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 230, -1));
    }// </editor-fold>//GEN-END:initComponents

    //------------------TXT FIELDS-------------------
    //TXT latitud methods 
    private void txtLatitudFocusGained(java.awt.event.FocusEvent evt) {//Latitud
        if (txtLatitud.getText().equals("Ingrese la latitud")) {
            txtLatitud.setText("");
        }
        txtLatitud.setForeground(Color.black);
    }
    private void txtLatitudFocusLost(java.awt.event.FocusEvent evt) {//Latitud
        if (txtLatitud.getText().isEmpty() == true) {
            txtLatitud.setText("Ingrese la latitud");
            txtLatitud.setForeground(new Color(204, 204, 204));
        }
    }
    private void txtLatitudMousePressed(java.awt.event.MouseEvent evt) {//Latitud
        if (txtLatitud.getText().equals("Ingrese la latitud")) {
            txtLatitud.setText("");
        }
        txtLatitud.setForeground(Color.black);
    }

    //TXT longitud methods 
    private void txtLongitudFocusGained(java.awt.event.FocusEvent evt) {//Longitud
        if (txtLongitud.getText().equals("Ingrese la longitud")) {
            txtLongitud.setText("");
        }
        txtLongitud.setForeground(Color.black);
    }
    private void txtLongitudFocusLost(java.awt.event.FocusEvent evt) {//Longitud
        if (txtLongitud.getText().isEmpty() == true) {
            txtLongitud.setText("Ingrese la longitud");
            txtLongitud.setForeground(new Color(204, 204, 204));
        }
    }
    private void txtLongitudMousePressed(java.awt.event.MouseEvent evt) {// Longitud
        if (txtLongitud.getText().equals("Ingrese la longitud")) {
            txtLongitud.setText("");
        }
        txtLongitud.setForeground(Color.black);
    }

    //TXT Magnitud methods
    private void txtMagnitudFocusGained(java.awt.event.FocusEvent evt) {// Magnitud    
        if (txtMagnitud.getText().equals("Ingrese la magnitud")) {
            txtMagnitud.setText("");
        }
        txtMagnitud.setForeground(Color.black);
    }
    private void txtMagnitudFocusLost(java.awt.event.FocusEvent evt) {// Magnitud        
        if (txtMagnitud.getText().isEmpty() == true) {
            txtMagnitud.setText("Ingrese la magnitud");
            txtMagnitud.setForeground(new Color(204, 204, 204));
        }
    }
    private void txtMagnitudMousePressed(java.awt.event.MouseEvent evt) {// Magnitud    
        if (txtMagnitud.getText().equals("Ingrese la magnitud")) {
            txtMagnitud.setText("");
        }
        txtMagnitud.setForeground(Color.black);
    }
    private void txtMagnitudKeyReleased(java.awt.event.KeyEvent evt) {// Magnitud    
        try {           
            double val = Double.parseDouble(txtMagnitud.getText());
            if (2.0 <= val && val <= 6.9) {
                lbSignoMagnitud.setText("Ml");
            } else if (val > 6.9) {
                lbSignoMagnitud.setText("Mw");
            } else {
                lbSignoMagnitud.setText("M");
            }
        } catch (Exception e) {   
        }
    }
    
    // txt profundidad methods
    private void txtProfundidadFocusGained(java.awt.event.FocusEvent evt) {                                           
        if (txtProfundidad.getText().equals("Ingrese la profundidad")) {
            txtProfundidad.setText("");
        }
        txtProfundidad.setForeground(Color.black);
    }
    private void txtProfundidadFocusLost(java.awt.event.FocusEvent evt) {
                if (txtProfundidad.getText().isEmpty() == true) {
            txtProfundidad.setText("Ingrese la profundidad");
            txtProfundidad.setForeground(new Color(204, 204, 204));
        }
    }

    // rb zonaSismo methods
    private void rbMaritimoStateChanged(javax.swing.event.ChangeEvent evt) {
        if (rbMaritimo.isSelected()) {
            cboProvincias.setEnabled(false);
        } else {
            cboProvincias.setEnabled(true);
        }
    }
    
    //------------------Buttons-------------------
    //btnAgregar methods
    private void btnAgregarMouseEntered(java.awt.event.MouseEvent evt) {
        if (btnAgregarPanel.getBackground() != Color.gray) {
            btnAgregarPanel.setBackground(VentanaPrincipal.overedColor);
        }

    }
    private void btnAgregarMouseExited(java.awt.event.MouseEvent evt) {
        if (btnAgregarPanel.getBackground() != Color.gray) {
            btnAgregarPanel.setBackground(VentanaPrincipal.normalColor);
        }
    }
    private void btnAgregarMouseClicked(java.awt.event.MouseEvent evt) {// Agregar
        if (btnAgregarPanel.getBackground() != Color.gray || lbID.getText().equals("")) {
            //get the data of the fields
            obtenerDatos();
            //Validaci[on de los datos
            if (fechaSismo == null) {
                JOptionPane.showMessageDialog(null, "Fecha Inválida!", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (hora == null) {
                JOptionPane.showMessageDialog(null, "Hora Inválida!", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (localizacion.equals("")) {
                JOptionPane.showMessageDialog(null, "Localización Inválida!", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (!flagRadioSelect) {
                JOptionPane.showMessageDialog(null, "Debe seleccionar una zona!", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (!flagProfundidad) {
                JOptionPane.showMessageDialog(null, "Profundidad Inválida!", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (!flagMagnitud) {
                JOptionPane.showMessageDialog(null, "Magnitud Inválida!", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (!flagLatitud) {
                JOptionPane.showMessageDialog(null, "Latitud Inválida!", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (!flagLongitud) {
                JOptionPane.showMessageDialog(null, "Longitud Inválida!", "Error", JOptionPane.ERROR_MESSAGE);
            }else if (provincia == -1 && rbTerrestre.isSelected()) {
                JOptionPane.showMessageDialog(null, "Debe seleccionar una provincia!", "Error", JOptionPane.ERROR_MESSAGE);

            } else {
                boolean respuesta = VentanaPrincipal.controlador.agregarSismo(fechaSismo, hora,
                        profundidad, latitud, longitud, magnitud, localizacion, terrestre,
                        Utilities.obtenerOrigen(origenFalla), Utilities.obtenerProvincia(provincia));
                if (respuesta) {
                    cargarTabla();
                    JOptionPane.showMessageDialog(null, "El sismo se ha registrado correctamente", "Éxito!", JOptionPane.INFORMATION_MESSAGE);
                    VentanaPrincipal.controlador.guardarDatos(tableSismos);
                    limpiarCampos();
                }else{
                    JOptionPane.showMessageDialog(null, "Ya existe un sismo con estos datos", "Error!", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }

    // btn Modificar Methods
    private void btnModificarMouseEntered(java.awt.event.MouseEvent evt) {
        btnModificarPanel.setBackground(VentanaPrincipal.overedColor);
    }
    private void btnModificarMouseExited(java.awt.event.MouseEvent evt) {
        btnModificarPanel.setBackground(VentanaPrincipal.normalColor);
    }
    private void btnModificarMouseClicked(java.awt.event.MouseEvent evt) {
        if (btnAgregarPanel.getBackground() == Color.gray) {
            obtenerDatos();
            //Validaci[on de los datos
            if (fechaSismo == null) {
                JOptionPane.showMessageDialog(null, "Fecha Inválida!", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (hora == null) {
                JOptionPane.showMessageDialog(null, "Hora Inválida!", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (localizacion.equals("")) {
                JOptionPane.showMessageDialog(null, "Localización Inválida!", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (!flagRadioSelect) {
                JOptionPane.showMessageDialog(null, "Debe seleccionar una zona!", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (!flagProfundidad) {
                JOptionPane.showMessageDialog(null, "Profundidad Inválida!", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (!flagMagnitud) {
                JOptionPane.showMessageDialog(null, "Magnitud Inválida!", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (!flagLatitud) {
                JOptionPane.showMessageDialog(null, "Latitud Inválida!", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (!flagLongitud) {
                JOptionPane.showMessageDialog(null, "Longitud Inválida!", "Error", JOptionPane.ERROR_MESSAGE);
            }else if (provincia == -1 && rbTerrestre.isSelected()) {
                JOptionPane.showMessageDialog(null, "Debe seleccionar una provincia!", "Error", JOptionPane.ERROR_MESSAGE);
            } else{
                        boolean respuesta = VentanaPrincipal.controlador.modificarSismo(Integer.parseInt(lbID.getText()), fechaSismo, hora,
                        profundidad, latitud, longitud, magnitud, localizacion, terrestre,
                        Utilities.obtenerOrigen(origenFalla), Utilities.obtenerProvincia(provincia));
                if (respuesta) {
                    cargarTabla();
                    JOptionPane.showMessageDialog(null, "El sismo se ha modificado correctamente", "Éxito!", JOptionPane.INFORMATION_MESSAGE);
                    limpiarCampos();
                    VentanaPrincipal.controlador.guardarDatos(tableSismos);
                }else{
                    JOptionPane.showMessageDialog(null, "No ha realizado nigún cambio al sismo", "Error!", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }

    // btnlimpiar Methods
    private void btnLimpiarMouseClicked(java.awt.event.MouseEvent evt) {
        limpiarCampos();
    }
    private void btnLimpiarMouseEntered(java.awt.event.MouseEvent evt) {
        btnLimpiarPanel.setBackground(VentanaPrincipal.overedColor);
    }
    private void btnLimpiarMouseExited(java.awt.event.MouseEvent evt) {
        btnLimpiarPanel.setBackground(VentanaPrincipal.normalColor);
    }

    // btnEliminar Methods
    private void btnEliminarMouseEntered(java.awt.event.MouseEvent evt) {
        btnEliminarPanel.setBackground(VentanaPrincipal.overedColor);
    }
    private void btnEliminarMouseExited(java.awt.event.MouseEvent evt) {
        btnEliminarPanel.setBackground(VentanaPrincipal.normalColor);
    }
    private void btnEliminarMouseClicked(java.awt.event.MouseEvent evt) {
        if (lbID.getText() != "") {
            VentanaPrincipal.controlador.eliminarSismo(Integer.parseInt(lbID.getText()));
            JOptionPane.showMessageDialog(null, "El sismo se ha eliminado correctamente", "Éxito!", JOptionPane.INFORMATION_MESSAGE);
            cargarTabla();
            VentanaPrincipal.controlador.guardarDatos(tableSismos);
            limpiarCampos();
        }
    }        

    //-------------------- Table Methods--------------
    // tableSismos Methods
    private void tableSismosMousePressed(java.awt.event.MouseEvent evt) {                                         
        // TODO add your handling code here:
        TableModel tableModel = tableSismos.getModel();
        Sismo s = VentanaPrincipal.controlador.consultarSismo((int) tableModel.getValueAt(tableSismos.getSelectedRow(), 0));
        if (evt.getClickCount() == 2) {
            try {
                abrirMapa(s.getLatitud(), s.getLongitud());
            } catch (IOException ex) {
                Logger.getLogger(PanelSismos.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else if (evt.getClickCount() == 1) {
            cargarCampos(s);
        }
    }

    //======================================================
    //                    Funcional Methods
    //=======================================================

    
    // -----------------field methods----------
    
    // get data of the fields
    /**
     * se encarga de obtener los datos de cada uno de los objetos de donde el usuario puede ingresar los datos
     */
    private void obtenerDatos(){
        fechaSismo = dateFechaSismo.getCalendar();
        hora.setTime((Date) timeHoraSismo.getValue());
        localizacion = txtLocalizacion.getText();
        if (rbMaritimo.isSelected()) {
            terrestre = false;
            provincia = -1;
            flagRadioSelect = true;
        } else if (rbTerrestre.isSelected()) {
            terrestre = true;
            provincia = cboProvincias.getSelectedIndex();
            flagRadioSelect = true;
        }
        origenFalla = cbFallas.getSelectedIndex();
        // We created four try to identify the exact field problem
        try {
            latitud = Double.parseDouble(txtLatitud.getText());
            flagLatitud = true;
        } catch (Exception e) {
            flagLatitud = false;
        }
        try {
            longitud = Double.parseDouble(txtLongitud.getText());
            flagLongitud = true;
        } catch (Exception e) {
            flagLongitud = false;
        }
        try {
            profundidad = Double.parseDouble(txtProfundidad.getText());
            flagProfundidad = true;
        } catch (Exception e) {
            flagProfundidad = false;
        }
        try {
            magnitud = Double.parseDouble(txtMagnitud.getText());
            flagMagnitud = true;
        } catch (Exception e) {
            flagMagnitud = false;
        }

    }
    /**
     * se encarga de limpiar los objetos donde el usuario ingresa los datos
     */
    public void limpiarCampos() {
        lbID.setText("");
        dateFechaSismo.setDate(null);
        Date date = new Date();
        timeHoraSismo.setValue(date);
        txtLocalizacion.setText("");
        rbMaritimo.setSelected(false);
        rbTerrestre.setSelected(false);
        cboProvincias.setSelectedIndex(0);
        cbFallas.setSelectedIndex(0);
        txtProfundidad.setText("Ingrese la profundidad");
        txtProfundidad.setForeground(new Color(204, 204, 204));
        txtMagnitud.setText("Ingrese la magnitud");
        txtMagnitud.setForeground(new Color(204, 204, 204));
        txtLatitud.setText("Ingrese la latitud");
        txtLatitud.setForeground(new Color(204, 204, 204));
        txtLongitud.setText("Ingrese la longitud");
        txtLongitud.setForeground(new Color(204, 204, 204));        
        btnAgregarPanel.setBackground(VentanaPrincipal.normalColor);
        btnAgregar.setForeground(Color.white);
        btnAgregar.setEnabled(true);
        tableSismos.setSelectionMode(0);
    }

    /**
     * se encarga de cargar los campos en la tabla
     * @param s un objeto sismo
     */
    public void cargarCampos(Sismo s) {
        lbID.setVisible(false);
        lbID.setText(String.valueOf(s.getId()));
        dateFechaSismo.setDate(s.getFecha().getTime());
        timeHoraSismo.setValue(s.getHora().getTime());
        txtLocalizacion.setText(s.getLocalizacion());
        if (s.isTerrestre()) {
            rbTerrestre.setSelected(true);
        } else {
            rbMaritimo.setSelected(true);
            cboProvincias.setEnabled(false);
        }
        cboProvincias.setSelectedIndex(Utilities.obtenerProvincia(s.getProvincia()));
        cbFallas.setSelectedIndex(Utilities.obtenerOrigen(s.getOrigen()));
        txtProfundidad.setText(String.valueOf(s.getProfundidad()));
        txtMagnitud.setText(String.valueOf(s.getMagnitud()));
        txtLatitud.setText(String.valueOf(s.getLatitud()));
        txtLongitud.setText(String.valueOf(s.getLongitud()));
        txtProfundidad.setForeground(Color.black);
        txtMagnitud.setForeground(Color.black);
        txtLatitud.setForeground(Color.black);
        txtLongitud.setForeground(Color.black);
        double val = s.getMagnitud();
        if (2.0 <= val && val <= 6.9) {
            lbSignoMagnitud.setText("Ml");
        } else if (val > 6.9) {
            lbSignoMagnitud.setText("Mw");
        } else {
            lbSignoMagnitud.setText("M");
        }
        btnAgregarPanel.setBackground(Color.gray);
        btnAgregar.setForeground(Color.black);
        btnAgregar.setEnabled(false);
    }
    
    // tabla
    /**
     * carga sismos a la tabla
     */
    public void cargarTabla() {
       
        tableSismos.setModel(VentanaPrincipal.controlador.cargarSismos());
        tableSismos.setDefaultEditor(Object.class, null);
    }
    
    // mapa
    /**
     * se encarga de abrir el mapa desde la ventana principal
     * @param latitud la latitud de la coordenada
     * @param longitud la longitud de la coordenada
     * @throws IOException en caso de que al abrir el mapa se produzca un error
     */
    private void abrirMapa(double latitud, double longitud) throws IOException {
        VentanaPrincipal.controlador.leerHTML();
        VentanaPrincipal.controlador.modificarHTML(latitud, longitud);
        VentanaPrincipal.controlador.escribirHTML();
        frame.add(MapsControl.view, BorderLayout.CENTER);
        frame.setSize(1280, 720);
        frame.setLocationRelativeTo(null);
        frame.setVisible(true);
        frame.setResizable(false);
        VentanaPrincipal.controlador.openMaps();
    }
    
        
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnAgregar;
    private javax.swing.JPanel btnAgregarPanel;
    private javax.swing.JLabel btnEliminar;
    private javax.swing.JPanel btnEliminarPanel;
    private javax.swing.JLabel btnLimpiar;
    private javax.swing.JPanel btnLimpiarPanel;
    private javax.swing.JLabel btnModificar;
    private javax.swing.JPanel btnModificarPanel;
    private javax.swing.JComboBox<String> cbFallas;
    private javax.swing.JComboBox<String> cboProvincias;
    private com.toedter.calendar.JDateChooser dateFechaSismo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JLabel lbFechaSismo;
    private javax.swing.JLabel lbHoraSismo;
    private javax.swing.JLabel lbID;
    private javax.swing.JLabel lbSignoMagnitud;
    private javax.swing.JLabel lbSismos1;
    private javax.swing.JLabel lbSismos11;
    private javax.swing.JLabel lbSismos12;
    private javax.swing.JLabel lbSismos2;
    private javax.swing.JLabel lbSismos4;
    private javax.swing.JLabel lbSismos5;
    private javax.swing.JLabel lbSismos6;
    private javax.swing.JLabel lbSismos9;
    private javax.swing.JPanel panelRadioZonaSismo;
    private javax.swing.ButtonGroup radioZonaSismo;
    private javax.swing.JRadioButton rbMaritimo;
    private javax.swing.JRadioButton rbTerrestre;
    private javax.swing.JTable tableSismos;
    private javax.swing.JSpinner timeHoraSismo;
    private javax.swing.JTextField txtLatitud;
    private javax.swing.JTextArea txtLocalizacion;
    private javax.swing.JTextField txtLongitud;
    private javax.swing.JTextField txtMagnitud;
    private javax.swing.JTextField txtProfundidad;
    // End of variables declaration//GEN-END:variables
}
